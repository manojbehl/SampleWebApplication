{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ecommerce/ecommerce.component.ts","webpack:///src/app/ecommerce/ecommerce.component.html","webpack:///src/app/ecommerce/login/login.component.ts","webpack:///src/app/ecommerce/login/login.component.html","webpack:///src/app/ecommerce/models/product-order.ts","webpack:///src/app/ecommerce/models/product-orders.ts","webpack:///src/app/ecommerce/orderhistroy/orderhistroy.component.ts","webpack:///src/app/ecommerce/orderhistroy/orderhistroy.component.html","webpack:///src/app/ecommerce/orders/orders.component.ts","webpack:///src/app/ecommerce/orders/orders.component.html","webpack:///src/app/ecommerce/products/products.component.ts","webpack:///src/app/ecommerce/products/products.component.html","webpack:///src/app/ecommerce/service/auth.service.ts","webpack:///src/app/ecommerce/service/ecommerce.service.ts","webpack:///src/app/ecommerce/shopping-cart/shopping-cart.component.ts","webpack:///src/app/ecommerce/shopping-cart/shopping-cart.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","routing","forRoot","AppRoutingModule","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EcommerceComponent","collapsed","orderFinished","productsC","reset","shoppingCartC","ordersC","paid","toggleCollapsed","finishOrder","LoginComponent","formBuilder","router","authService","submitted","invalidLogin","showErrorMessage","console","log","email","password","login","subscribe","user","error","localStorage","setItem","JSON","stringify","parse","getItem","navigate","onSubmit","ProductOrder","product","quantity","ProductOrders","productOrders","OrderhistroyComponent","ecommerceService","loadOrders","userEmail","getAllOrders","orders","placeOrder","OrdersComponent","sub","OrdersChanged","loadTotal","saveOrder","TotalChanged","total","Total","ProductsComponent","products","productSelected","loadProducts","order","SelectedProductOrder","selectedProductOrder","productOrder","index","getProductIndex","shoppingCartOrders","splice","findIndex","value","getAllProducts","forEach","push","AuthService","http","productsUrl","username","authToken","btoa","get","removeItem","providedIn","EcommerceService","ordersUrl","productOrderSubject","ordersSubject","totalSubject","ProductOrderChanged","asObservable","userId","post","next","ShoppingCartComponent","onOrderFinished","loadCart","sum","price","unsubscribe","emit","calculateTotal","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './ecommerce/login/login.component';\nimport { EcommerceComponent } from './ecommerce/ecommerce.component';\nimport { OrderhistroyComponent } from './ecommerce/orderhistroy/orderhistroy.component';\n\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'ecomm', component: EcommerceComponent },\n  {path : '', component : LoginComponent},\n  {path : 'orderhistory', component : OrderhistroyComponent}\n];\n\nexport const routing = RouterModule.forRoot(routes);\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'IgniteFrontEndApp';\n\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EcommerceComponent } from './ecommerce/ecommerce.component';\nimport { ProductsComponent } from './ecommerce/products/products.component';\nimport { OrdersComponent } from './ecommerce/orders/orders.component';\nimport { ShoppingCartComponent } from './ecommerce/shopping-cart/shopping-cart.component';\nimport {EcommerceService} from \"./ecommerce/service/ecommerce.service\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { LoginComponent } from './ecommerce/login/login.component';\nimport { OrderhistroyComponent } from './ecommerce/orderhistroy/orderhistroy.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EcommerceComponent,\n    ProductsComponent,\n    OrdersComponent,\n    ShoppingCartComponent,\n    LoginComponent,\n    OrderhistroyComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule, ReactiveFormsModule\n  ],\n  providers: [EcommerceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {ProductsComponent} from \"./products/products.component\";\nimport {ShoppingCartComponent} from \"./shopping-cart/shopping-cart.component\";\nimport {OrdersComponent} from \"./orders/orders.component\";\n\n@Component({\n  selector: 'app-ecommerce',\n  templateUrl: './ecommerce.component.html',\n  styleUrls: ['./ecommerce.component.css']\n})\nexport class EcommerceComponent implements OnInit {\n\n  collapsed = true;\n  orderFinished = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  @ViewChild('productsC')\n    productsC: ProductsComponent;\n\n    @ViewChild('shoppingCartC')\n    shoppingCartC: ShoppingCartComponent;\n\n    @ViewChild('ordersC')\n    ordersC: OrdersComponent;\n\n    toggleCollapsed(): void {\n        this.collapsed = !this.collapsed;\n    }\n\n    finishOrder(orderFinished: boolean) {\n        this.orderFinished = orderFinished;\n    }\n\n    reset() {\n        this.orderFinished = false;\n        this.productsC.reset();\n        this.shoppingCartC.reset();\n        this.ordersC.paid = false;\n    }\n\n}\n","\n\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n      <div class=\"container\">\n          <a class=\"navbar-brand\" href=\"#\"> Ecommerce</a>\n          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                  data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\"\n                  aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"toggleCollapsed()\">\n              <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div id=\"navbarResponsive\" [ngClass]=\"{'collapse': collapsed, 'navbar-collapse': true}\">\n              <ul class=\"navbar-nav ml-auto\">\n                  <li class=\"nav-item active\">\n                      <a class=\"nav-link\" href=\"#\" (click)=\"reset()\">Home\n                          <span class=\"sr-only\">(current)</span>\n                      </a>\n                  </li>\n              </ul>\n          </div>\n      </div>\n  </nav>\n  <div class=\"row mainComponent\" >\n      <div class=\"col-md-9\">\n          <app-products #productsC [hidden]=\"orderFinished\" class=\"appproduct\"></app-products>\n      </div>\n      <div class=\"col-md-3\">\n          <app-shopping-cart (onOrderFinished)=finishOrder($event) #shoppingCartC\n                             [hidden]=\"orderFinished\"></app-shopping-cart>\n      </div>\n      <div class=\"col-md-6 offset-3\">\n          <app-orders #ordersC [hidden]=\"!orderFinished\"></app-orders>\n      </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport {Router} from \"@angular/router\";\nimport {first} from \"rxjs/operators\";\nimport {AuthService} from \"../service/auth.service\";\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  submitted: boolean = false;\n  invalidLogin: boolean = false;\n  email:String;\n  password:String;\n  showErrorMessage=false;\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private authService:AuthService) { }\n\n  onSubmit() {\n    this.submitted = true;\n    console.log(this.email);\n    console.log(this.password);\n    this.authService.login(this.email,this.password).subscribe(\n        (user: any) => {\n            if(user.error == true){\n              this.showErrorMessage = true;\n//              this.router.navigate(['ecomm']);\n\n            }else{\n                this.showErrorMessage = false;\n              localStorage.setItem(\"currentUser\", JSON.stringify( user));\n              console.log( JSON.parse(localStorage.getItem('currentUser')) );\n\n              this.router.navigate(['orderhistory']);\n\n\n            }\n\n        },\n        (error) =>{\n          console.log(error);\n        //  this.router.navigate(['login']);\n        }\n    );\n\n  }\n\n  ngOnInit() {\n\n  }\n}\n","<div class=\"row\" class=\"wrapper fadeInDown\" >\n\n  <div class=\"col-md-10 col-md-offset-2\" id=\"formContent\">\n    <div *ngIf=\"showErrorMessage\" class=\"form-group fadeIn second\">\n      Invalid username and password Please try again\n    </div>\n      <div class=\"form-group\">\n        <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"login\" [(ngModel)]=\"email\">\n      </div>\n      <div class=\"form-group\">\n        <input type=\"text\" id=\"password\" class=\"fadeIn third\" [(ngModel)]=\"password\" name=\"password\" placeholder=\"password\">\n\n      </div>\n      <button type=\"submit\" id=\"loginSubmit\" class=\"fadeIn fourth\" (click)=\"onSubmit()\">Login</button>\n  </div>\n</div>\n","import {Product} from \"./product\";\n\nexport class ProductOrder{\n    product: Product;\n    quantity: number;\n\n    constructor(product: Product, quantity: number) {\n        this.product = product;\n        this.quantity = quantity;\n    }\n}\n","import {ProductOrder} from \"./product-order\";\n\nexport class ProductOrders  {\n    productOrders: ProductOrder[] = [];\n    userId:number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ProductOrders} from \"../models/product-orders\";\nimport {ProductOrder} from \"../models/product-order\";\nimport {EcommerceService} from \"../service/ecommerce.service\";\nimport {User} from \"../models/user\";\nimport {Router} from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-orderhistroy',\n  templateUrl: './orderhistroy.component.html',\n  styleUrls: ['./orderhistroy.component.css']\n})\nexport class OrderhistroyComponent implements OnInit {\n\n  constructor(private ecommerceService: EcommerceService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadOrders();\n  }\n\n  orders:ProductOrders[];\n  productOrders:ProductOrder[];\n  user:User;\n  userEmail:string;\n\n  placeOrder(){\n    this.router.navigate(['ecomm']);\n  }\n\n  loadOrders(){\n    this.user =   JSON.parse(localStorage.getItem('currentUser'));\n    this.userEmail = this.user.email;\n    console.log(this.userEmail);\n    this.ecommerceService.getAllOrders(this.user.id)\n        .subscribe(\n            (productOrders: any[]) => {\n                this.orders = productOrders;\n                console.log(this.orders);\n            },\n            (error) => console.log(error)\n        );\n\n  }\n}\n","<div class=\"col-md-8\">\n  <h4> User :  {{ userEmail }}  Order  Details</h4>\n\n<button class=\"btn btn-danger\" id=\"placeOrder\" (click)=\"placeOrder()\" style=\"align:right\"> Place Order</button>\n  <table class=\"table table-striped\">\n    <thead>\n    <tr>\n      <th class=\"hidden\">Id</th>\n      <th>Name</th>\n      <th>Price</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let product of orders\">\n      <td>{{product.id}}</td>\n      <td>{{product.id}}</td>\n      <td>{{product.totalOrderPrice}}</td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ProductOrders} from \"../models/product-orders\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {EcommerceService} from \"../service/ecommerce.service\";\nimport {Router} from \"@angular/router\";\nimport {first} from \"rxjs/operators\";\n\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n\n  orders: ProductOrders;\ntotal: number;\npaid: boolean;\nsub: Subscription;\n\nconstructor(private ecommerceService: EcommerceService, private router: Router) {\n    this.orders = this.ecommerceService.ProductOrders;\n}\n\nngOnInit() {\n    this.paid = false;\n    this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n        this.orders = this.ecommerceService.ProductOrders;\n    });\n    this.loadTotal();\n}\n\norderHistory(){\n    this.router.navigate(['orderhistory']);\n}\n\npay() {\n    this.paid = true;\n    this.ecommerceService.saveOrder(this.orders).subscribe();\n}\n\nloadTotal() {\n    this.sub = this.ecommerceService.TotalChanged.subscribe(() => {\n        this.total = this.ecommerceService.Total;\n    });\n  }\n}\n","<h2 class=\"text-center\">ORDER</h2>\n<ul>\n    <li *ngFor=\"let order of orders.productOrders\">\n        {{ order.product.name }} - ${{ order.product.price }} x {{ order.quantity}} pcs.\n    </li>\n</ul>\n<h3 class=\"text-right\">Total amount: ${{ total }}</h3>\n\n<button class=\"btn btn-primary btn-block\" (click)=\"pay()\" *ngIf=\"!paid\" id=\"payAmount\">Pay</button>\n\n<div class=\"alert alert-success\" role=\"alert\" *ngIf=\"paid\">\n    <strong>Congratulation!</strong> You successfully made the order.\n\n</div>\n<button class=\"btn btn-primary btn-block\" (click)=\"orderHistory()\" *ngIf=\"paid\">Order Histroy</button>\n","import { Component, OnInit } from '@angular/core';\nimport {ProductOrder} from \"../models/product-order\";\nimport {EcommerceService} from \"../service/ecommerce.service\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {ProductOrders} from \"../models/product-orders\";\nimport {Product} from \"../models/product\";\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  productOrders: ProductOrder[] = [];\n   products: Product[] = [];\n   selectedProductOrder: ProductOrder;\n   private shoppingCartOrders: ProductOrders;\n   sub: Subscription;\n   productSelected: boolean = false;\n\n   constructor(private ecommerceService: EcommerceService) {\n    //  this.loadProducts();\n    //  this.loadOrders();\n\n   }\n\n   ngOnInit() {\n       this.productOrders = [];\n      this.loadProducts();\n       this.loadOrders();\n   }\n\n   addToCart(order: ProductOrder) {\n       this.ecommerceService.SelectedProductOrder = order;\n       this.selectedProductOrder = this.ecommerceService.SelectedProductOrder;\n       this.productSelected = true;\n   }\n\n   removeFromCart(productOrder: ProductOrder) {\n       let index = this.getProductIndex(productOrder.product);\n       if (index > -1) {\n           this.shoppingCartOrders.productOrders.splice(\n               this.getProductIndex(productOrder.product), 1);\n       }\n       this.ecommerceService.ProductOrders = this.shoppingCartOrders;\n       this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n       this.productSelected = false;\n   }\n\n   getProductIndex(product: Product): number {\n       return this.ecommerceService.ProductOrders.productOrders.findIndex(\n           value => value.product === product);\n   }\n\n   isProductSelected(product: Product): boolean {\n       return this.getProductIndex(product) > -1;\n   }\n\n   loadProducts() {\n       this.ecommerceService.getAllProducts()\n           .subscribe(\n               (products: any[]) => {\n                   this.products = products;\n                   this.products.forEach(product => {\n                       this.productOrders.push(new ProductOrder(product, 0));\n                   })\n               },\n               (error) => console.log(error)\n           );\n   }\n\n   loadOrders() {\n       this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n           this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n       });\n   }\n\n   reset() {\n       this.productOrders = [];\n       this.loadProducts();\n       this.ecommerceService.ProductOrders.productOrders = [];\n       this.loadOrders();\n       this.productSelected = false;\n   }\n\n}\n","<div class=\"row card-deck\">\n    <div class=\"col-lg-6 col-md-6 mb-4\" *ngFor=\"let order of productOrders\">\n        <div class=\"card text-center\">\n            <div class=\"card-header\">\n                <h4>{{order.product.name}}</h4>\n            </div>\n            <div class=\"card-body\">\n                <a href=\"#\"><img class=\"card-img-top\" src={{order.product.pictureUrl}} alt=\"\"></a>\n                <h5 class=\"card-title\">${{order.product.price}}</h5>\n                <div class=\"row\">\n                    <div class=\"col-6 padding-0\" *ngIf=\"!isProductSelected(order.product)\">\n                        <input type=\"number\" min=\"0\" id=\"selectQuantity\" class=\"form-control\" [(ngModel)]=order.quantity>\n                    </div>\n                    <div class=\"col-6 padding-0\" *ngIf=\"!isProductSelected(order.product)\">\n                        <button class=\"btn btn-primary\" id=\"addToCart\" (click)=\"addToCart(order)\"\n                                [disabled]=\"order.quantity <= 0\">Add To Cart\n                        </button>\n                    </div>\n                    <div class=\"col-12\" *ngIf=\"isProductSelected(order.product)\">\n                        <button class=\"btn btn-primary btn-block\" id=\"removeFromCart\"\n                                (click)=\"removeFromCart(order)\">Remove From Cart\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { HttpHeaders } from \"@angular/common/http\";\nimport {User} from \"../models/user\";\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private productsUrl = \"/api/login\";\n\n\n  private currentUserSubject: BehaviorSubject<User>;\n   public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient) { }\n\n  login(username: String, password: String) {\n    // Auth0 authorize request\n\n    let authToken =  btoa(username + \":\" +password) ;\n    return this.http.get(this.productsUrl+\"?authToken=\"+authToken );\n  }\n\n\n\n\n\n  logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {ProductOrder} from \"../models/product-order\";\nimport {Subject} from \"rxjs/internal/Subject\";\nimport {ProductOrders} from \"../models/product-orders\";\nimport {User} from \"../models/user\";\n\nimport {HttpClient} from '@angular/common/http';\nimport { HttpHeaders } from \"@angular/common/http\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EcommerceService {\n\n  private productsUrl = \"/api/products\";\n  private ordersUrl = \"/api/orders\";\n\n  private productOrder: ProductOrder;\n  private orders: ProductOrders = new ProductOrders();\n\n  private productOrderSubject = new Subject();\n  private ordersSubject = new Subject();\n  private totalSubject = new Subject();\n\n  private total: number;\n\n  ProductOrderChanged = this.productOrderSubject.asObservable();\n  OrdersChanged = this.ordersSubject.asObservable();\n  TotalChanged = this.totalSubject.asObservable();\n\n  constructor(private http: HttpClient) {\n  }\n\n  user:User;\n\n  getAllProducts() {\n    // user:User = localStorage.getItem(\"currentUser\");\n      this.user =   JSON.parse(localStorage.getItem('currentUser'))\n      return this.http.get(this.productsUrl+\"?authToken=\"+this.user.authToken);\n  }\n\n  getAllOrders(userId: number) {\n    // user:User = localStorage.getItem(\"currentUser\");\n      this.user =   JSON.parse(localStorage.getItem('currentUser'))\n      return this.http.get(this.ordersUrl+\"/\"+userId + \"?authToken=\"+this.user.authToken);\n  }\n\n\n  saveOrder(order: ProductOrders) {\n      this.user =   JSON.parse(localStorage.getItem('currentUser'))\n      order.userId = this.user.id;\n      console.log(order);\n      return this.http.post(this.ordersUrl +\"?authToken=\"+this.user.authToken, order);\n  }\n\n  set SelectedProductOrder(value: ProductOrder) {\n      this.productOrder = value;\n      this.productOrderSubject.next();\n  }\n\n  get SelectedProductOrder() {\n      return this.productOrder;\n  }\n\n  set ProductOrders(value: ProductOrders) {\n      this.orders = value;\n      this.ordersSubject.next();\n  }\n\n  get ProductOrders() {\n      return this.orders;\n  }\n\n  get Total() {\n      return this.total;\n  }\n\n  set Total(value: number) {\n      this.total = value;\n      this.totalSubject.next();\n  }\n}\n","import {Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\nimport {ProductOrders} from \"../models/product-orders\";\nimport {ProductOrder} from \"../models/product-order\";\nimport {EcommerceService} from \"../service/ecommerce.service\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit , OnDestroy {\n    orderFinished: boolean;\n    orders: ProductOrders;\n    total: number;\n    sub: Subscription;\n\n    @Output() onOrderFinished: EventEmitter<boolean>;\n\n    constructor(private ecommerceService: EcommerceService) {\n        this.total = 0;\n        this.orderFinished = false;\n        this.onOrderFinished = new EventEmitter<boolean>();\n    }\n\n    ngOnInit() {\n        this.orders = new ProductOrders();\n        this.loadCart();\n        this.loadTotal();\n    }\n\n    private calculateTotal(products: ProductOrder[]): number {\n        let sum = 0;\n        products.forEach(value => {\n            sum += (value.product.price * value.quantity);\n        });\n        return sum;\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    finishOrder() {\n        this.orderFinished = true;\n        this.ecommerceService.Total = this.total;\n        this.onOrderFinished.emit(this.orderFinished);\n    }\n\n    loadTotal() {\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.total = this.calculateTotal(this.orders.productOrders);\n        });\n    }\n\n    loadCart() {\n        this.sub = this.ecommerceService.ProductOrderChanged.subscribe(() => {\n            let productOrder = this.ecommerceService.SelectedProductOrder;\n            if (productOrder) {\n                this.orders.productOrders.push(new ProductOrder(\n                    productOrder.product, productOrder.quantity));\n            }\n            this.ecommerceService.ProductOrders = this.orders;\n            this.orders = this.ecommerceService.ProductOrders;\n            this.total = this.calculateTotal(this.orders.productOrders);\n        });\n    }\n\n    reset() {\n        this.orderFinished = false;\n        this.orders = new ProductOrders();\n        this.orders.productOrders = []\n        this.loadTotal();\n        this.total = 0;\n    }\n\n\n}\n","<div class=\"card text-white bg-danger mb-3\" style=\"max-width: 18rem;\">\n    <div class=\"card-header text-center\">Shopping Cart</div>\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">Total: ${{total}}</h5>\n        <hr>\n        <h6 class=\"card-title\">Items bought:</h6>\n\n        <ul>\n            <li *ngFor=\"let order of orders.productOrders\">\n                {{ order.product.name }} - {{ order.quantity}} pcs.\n            </li>\n        </ul>\n\n        <button id=\"checkout\" class=\"btn btn-light btn-block\" (click)=\"finishOrder()\"\n                [disabled]=\"orders.productOrders.length == 0\">Checkout\n        </button>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}